@model Store.Web.ViewModels.RegisterPublisherViewModel

<h1>Edit Publisher</h1>
@using (Html.BeginForm("Submit", "Publisher", FormMethod.Post))
{
    <div class="form-group">
        <label>ID</label>
        <br />

        @Html.TextBoxFor(model => model.ID, new { value = Model.ID })

    </div>
    <div class="form-group">
        <label>Name</label>
        <br />

        @Html.TextBoxFor(model => model.Name, new { value = Model.Name })
        @Html.ValidationMessageFor(m => m.Name, null, new { @class = "attribute-error" })


    </div>
    <div class="form-group">
        <label>Address</label>
        <br />

        @Html.TextBoxFor(model => model.Address, new { value = Model.Address })
        @Html.ValidationMessageFor(m => m.Address, null, new { @class = "attribute-error" })


    </div>
    <div class="form-group">
        <label>PhoneNumber</label>
        <br />

        @Html.TextBoxFor(model => model.PhoneNumber, new { value = Model.PhoneNumber })
        @Html.ValidationMessageFor(m => m.PhoneNumber, null, new { @class = "attribute-error" })

    </div>
    <div class="form-group">
        <label>Email</label>
        <br />

        @Html.TextBoxFor(model => model.Email, new { value = Model.Email })
        @Html.ValidationMessageFor(m => m.Email, null, new { @class = "attribute-error" })
        @Html.ValidationMessage("UniquePublisher", new { @class = "attribute-error" })


    </div>

    <button type="submit" class="btn btn-primary">Submit</button>


    <button type="submit" class="btn btn-danger" formaction="@Url.Action("Delete", "Publisher", new { id = Model.ID })">
        Delete
    </button>
}
<style>
    .error-summary {
        color: red;
    }

    .attribute-error {
        display: block;
        color: red;
    }
</style>




